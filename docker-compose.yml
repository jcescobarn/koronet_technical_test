version: '3.8'

services:
  app:
    build: 
      context: ./web_app
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DB_NAME=${MYSQL_DB_NAME}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
    depends_on:
      - mysql
      - redis  
      - mongo  
    networks:
      - koronet-network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD} 
      MYSQL_DATABASE: ${MYSQL_DB_NAME} 
    ports:
      - "3306:3306"
    networks:
      - koronet-network

  redis:
    image: redis:latest  
    ports:
      - "6379:6379"  
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}  
    networks:
      - koronet-network

  mongo:
    image: mongo  
    ports:
      - "27017:27017"  
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}  
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}  
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}  
    networks:
      - koronet-network

networks:
  koronet-network:
    driver: bridge
